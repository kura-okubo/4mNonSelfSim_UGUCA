"""
interface submodule
"""
from __future__ import annotations
import puguca
import puguca.half_space
import puguca.mesh
__all__ = ['BarrasLaw', 'BimatInterface', 'DefRigInterface', 'Interface', 'InterfaceLaw', 'LinearCoulombFrictionLaw', 'LinearShearCohesiveLaw', 'UnimatShearInterface']
class BarrasLaw(InterfaceLaw):
    def __init__(self, mesh: puguca.mesh.BaseMesh, tau_max_default: float, delta_c_default: float, name: str = 'blaw') -> None:
        ...
    def getDc(self) -> puguca.mesh.NodalField:
        ...
    def getTauMax(self) -> puguca.mesh.NodalField:
        ...
class BimatInterface(Interface):
    def __init__(self, mesh: puguca.mesh.FFTableMesh, components: ..., std: ..., std: ..., top_material: puguca.half_space.Material, bot_material: puguca.half_space.Material, law: ..., method: puguca.SolverMethod = ...) -> None:
        ...
    def advanceTimeStep(self, solver_method: puguca.SolverMethod, ts_factor: int = 1) -> None:
        ...
    def closingNormalGapForce(self, arg0: puguca.mesh.NodalField, arg1: bool, arg2: int) -> None:
        ...
    def computeGap(self, arg0: puguca.mesh.NodalField, arg1: bool) -> None:
        ...
    def dump(self, arg0: int, arg1: float) -> None:
        ...
    def getBot(self) -> puguca.half_space.HalfSpace:
        ...
    def getStableTimeStep(self) -> float:
        ...
    def getTop(self) -> puguca.half_space.HalfSpace:
        ...
    def init(self, arg0: bool) -> None:
        ...
    def initDump(self, arg0: str, arg1: str) -> None:
        ...
    def maintainShearGapForce(self, arg0: puguca.mesh.NodalField) -> None:
        ...
    def registerDumpFields(self, arg0: str) -> None:
        ...
    def setTimeStep(self, arg0: float) -> None:
        ...
class DefRigInterface:
    def __init__(self, mesh: puguca.mesh.FFTableMesh, components: ..., std: ..., std: ..., top_material: puguca.half_space.Material, law: ..., method: puguca.SolverMethod = ...) -> None:
        ...
    def advanceTimeStep(self, arg0: puguca.SolverMethod, arg1: int) -> None:
        ...
    def dump(self, arg0: int, arg1: float) -> None:
        ...
    def getBot(self) -> puguca.half_space.HalfSpace:
        ...
    def getLoad(self) -> puguca.mesh.NodalField:
        ...
    def getStableTimeStep(self) -> float:
        ...
    def getTop(self) -> puguca.half_space.HalfSpace:
        ...
    def init(self, arg0: bool) -> None:
        ...
    def initDump(self, arg0: str, arg1: str) -> None:
        ...
    def registerDumpFields(self, arg0: str) -> None:
        ...
    def setTimeStep(self, arg0: float) -> None:
        ...
class Interface:
    def getCohesion(self) -> puguca.mesh.NodalField:
        ...
    def getLoad(self) -> puguca.mesh.NodalField:
        ...
class InterfaceLaw:
    def __init__(self, mesh: puguca.mesh.BaseMesh) -> None:
        ...
    def computeCohesiveForces(self, arg0: bool, arg1: int) -> None:
        ...
    def getCohesion(self) -> puguca.mesh.NodalField:
        ...
    def getInterface(self) -> Interface:
        ...
    def getMesh(self) -> puguca.mesh.BaseMesh:
        ...
class LinearCoulombFrictionLaw(InterfaceLaw):
    def __init__(self, mesh: puguca.mesh.BaseMesh, mu_s_default: float, mu_k_default: float, d_c_default: float, char_reg_time: float = 0.0, name: str = 'lcflaw') -> None:
        ...
    def getCharacteristicTime(self) -> puguca.mesh.NodalField:
        ...
    def getDc(self) -> puguca.mesh.NodalField:
        ...
    def getMuK(self) -> puguca.mesh.NodalField:
        ...
    def getMuS(self) -> puguca.mesh.NodalField:
        ...
class LinearShearCohesiveLaw(InterfaceLaw):
    def __init__(self, mesh: puguca.mesh.BaseMesh, Gc_default: float, tau_c_default: float, tau_r_default: float = 0.0, name: str = 'lsclaw') -> None:
        """
                   Linear shear cohesive law.
        
                   Args:
                       mesh (BaseMesh): Mesh object.
                       Gc_default (float): Cohesive energy.
                       tau_c_default (float): Cohesive strength.
                       tau_r_default (float): Residual strength.
                       name (str): Name of the law.
        """
    def getGc(self) -> puguca.mesh.NodalField:
        ...
    def getTauc(self) -> puguca.mesh.NodalField:
        ...
    def getTaur(self) -> puguca.mesh.NodalField:
        ...
class UnimatShearInterface(Interface):
    def __init__(self, mesh: puguca.mesh.FFTableMesh, components: ..., std: ..., std: ..., top_material: puguca.half_space.Material, law: ..., method: puguca.SolverMethod = ...) -> None:
        ...
    def advanceTimeStep(self, arg0: puguca.SolverMethod, arg1: int) -> None:
        ...
    def closingNormalGapForce(self, arg0: puguca.mesh.NodalField, arg1: bool, arg2: int) -> None:
        ...
    def computeGap(self, arg0: puguca.mesh.NodalField, arg1: bool) -> None:
        ...
    def dump(self, arg0: int, arg1: float) -> None:
        ...
    def getBot(self) -> puguca.half_space.HalfSpace:
        ...
    def getLoad(self) -> puguca.mesh.NodalField:
        ...
    def getStableTimeStep(self) -> float:
        ...
    def getTop(self) -> puguca.half_space.HalfSpace:
        ...
    def init(self, arg0: bool) -> None:
        ...
    def initDump(self, arg0: str, arg1: str) -> None:
        ...
    def maintainShearGapForce(self, arg0: puguca.mesh.NodalField) -> None:
        ...
    def registerDumpFields(self, arg0: str) -> None:
        ...
    def setTimeStep(self, arg0: float) -> None:
        ...
